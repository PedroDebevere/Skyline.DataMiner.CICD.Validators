<UserControl x:Class="Validator_Management_Tool.Views.CheckView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:tools="clr-namespace:Validator_Management_Tool.Tools"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="950">

    <UserControl.Resources>
        
        <!--Converters-->
        <tools:CategoryConverter x:Key="categoryConverter"/>
        <tools:ArrayToStringConverter x:Key="arrayToStringConverter"/>
        <tools:CheckIdConverter x:Key="checkIdConverter"/>
        <tools:CheckBubbelUpConverter x:Key="checkBubbelUpConverter"/>
        <tools:NamespaceBubbelUpConverter x:Key="namespaceBubbelUpConverter"/>
        <tools:CategoryBubbelUpConverter x:Key="categoryBubbelUpConverter"/>
        <tools:EmptyStringToBooleanConvert x:Key="emptyStringToBooleanConverter"/>

        <!--Conditional Styles-->
        <Style x:Key="CheckExpanderErrorBubbelUp" TargetType="TextBlock">
            <Setter Property="Foreground" Value="Gray"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Items, Converter={StaticResource checkBubbelUpConverter}}" Value="True">
                    <Setter Property="Foreground" Value="Red" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="NamespaceExpanderErrorBubbelUp" TargetType="TextBlock">
            <Setter Property="Foreground" Value="Gray"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Items, Converter={StaticResource namespaceBubbelUpConverter}}" Value="True">
                    <Setter Property="Foreground" Value="Red" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="CategoryExpanderErrorBubbelUp" TargetType="TextBlock">
            <Setter Property="Foreground" Value="Gray"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Items, Converter={StaticResource categoryBubbelUpConverter}}" Value="True">
                    <Setter Property="Foreground" Value="Red" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="GenerateButtonStyle" TargetType="Button">
            <Setter Property="IsEnabled" Value="True" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding HasErrors}" Value="True">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ErrorIconStyle" TargetType="StackPanel">
            <Style.Triggers>
                <DataTrigger Binding="{Binding HasErrors}" Value="False">
                    <Setter Property="Visibility" Value="Hidden"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ErrorStyle" TargetType="ListViewItem">
            <Style.Triggers>
                <DataTrigger Binding="{Binding HasChanges}" Value="True">
                    <Setter Property="Background" Value="LightGray"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ErrorTextStyle" TargetType="TextBlock">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Error}" Value="True">
                    <Setter Property="Foreground" Value="Red"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="UpToDateStyle" TargetType="TextBlock">
            <Style.Triggers>
                <DataTrigger Binding="{Binding HasChanges}" Value="False">
                    <Setter Property="Visibility" Value="Hidden" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!--Collection view source where the grouping properties and the source are defined-->
        <CollectionViewSource x:Key="ChecksViewSource" Source="{Binding Checks}" IsLiveGroupingRequested="True">
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="Category" />
                <PropertyGroupDescription PropertyName="Namespace" />
                <PropertyGroupDescription PropertyName="CheckName" />
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>
    </UserControl.Resources>

    <!--Main Layout-->
    <Grid Margin="10">

        <!--Dividing the window in rows-->
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>

        <!--Upper Row with some buttons, the error icon and the outdated message-->
        <DockPanel Grid.Row="0">
            <Button x:Name="RefreshBtn" Content="Refresh" Command="{Binding RefreshCommand}" VerticalAlignment="Center" HorizontalAlignment="Left" Width="100"/>
            <Button Content="Add Check..." Command="{Binding AddCheckCommand}" VerticalAlignment="Center" HorizontalAlignment="Left" Width="100" Margin="10 0 0 0"/>
            <Button Content="{Binding CollapseButtonString}" HorizontalAlignment="Left" Command="{Binding ExpandCommand}" VerticalAlignment="Center" Width="100" Margin="10 0 0 0"/>
            <!--Search box-->
            <TextBox Text="{Binding SearchString, UpdateSourceTrigger=PropertyChanged}" Width="200" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10 0 0 0">
                <TextBox.Style>
                    <Style TargetType="TextBox">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SearchString, Converter={StaticResource emptyStringToBooleanConverter}}" Value="False">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type TextBox}">
                                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsFocused" Value="true">
                                                    <Setter Property="BorderBrush" TargetName="border" Value="Orange"/>
                                                    <Setter Property="BorderThickness" Value="2" TargetName="border"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>

            <!--Error navigation-->
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Style="{DynamicResource ErrorIconStyle}">
                <Image VerticalAlignment="Center"  Width="30" Cursor="Hand" x:Name="ErrorIcon">
                    <Image.ToolTip>
                        <ToolTip>
                            <ToolTip.Content>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Error in Check "/>
                                    <TextBlock Text="{Binding SelectedErrorCheck.FullId}"/>
                                </StackPanel>
                            </ToolTip.Content>
                        </ToolTip>
                    </Image.ToolTip>
                    <Image.InputBindings>
                        <MouseBinding Gesture="LeftClick" Command="{Binding OpenCheckCommand}" />
                    </Image.InputBindings>
                </Image>
                <TextBlock VerticalAlignment="Center" Text="{Binding SelectedErrorCheck.FullId}" MinWidth="40"></TextBlock>
                <StackPanel VerticalAlignment="Center" Orientation="Vertical">
                    <Button FontFamily="Marlett" FontSize="15" Content="5" Width="20" IsEnabled="{Binding UpArrowEnabled}" Command="{Binding UpArrowCommand}"/>
                    <Button FontFamily="Marlett" FontSize="15" Content="6" Width="20" IsEnabled="{Binding DownArrowEnabled}" Command="{Binding DownArrowCommand}"/>
                </StackPanel>
            </StackPanel>
        </DockPanel>

        <!--Main Error Messages Overview-->
        <ListView Grid.Row="1" Name="lvChecks" ItemsSource="{Binding Checks}" HorizontalAlignment="Stretch" ItemContainerStyle="{DynamicResource ErrorStyle}">
            <ListView.View>
                <GridView>
                    <GridViewColumn Width="60" >
                        <GridViewColumn.CellTemplate>
                            <DataTemplate/>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="ID" Width="75">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding FullId}" Style="{DynamicResource ErrorTextStyle}"/>
                                </StackPanel>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Name" Width="Auto">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Name}" Style="{DynamicResource ErrorTextStyle}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Source" Width="150">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Source}" Style="{DynamicResource ErrorTextStyle}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Actions" Width="200">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" Margin="6,2,6,2">
                                    <TextBlock>
                                        <Button Content="Details..." Width="80" Command="{Binding EditCommand}"/>
                                        <Button Content="Delete" Width="80" Command="{Binding Path=DataContext.DeleteCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type
                                            ItemsControl}}}" CommandParameter="{Binding .}"/>
                                    </TextBlock>
                                </StackPanel>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>

            <!--Defining of the group headers and expanders-->
            <ListView.GroupStyle>

                <!--Sort by Category-->
                <GroupStyle>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type GroupItem}">
                                        <Expander  IsExpanded="{Binding RelativeSource={RelativeSource FindAncestor, 
                                                AncestorType={x:Type UserControl}}, Path=DataContext.CategoryExpanderToggle, UpdateSourceTrigger=Explicit}">
                                            <Expander.Header>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Text="[" FontWeight="Bold" FontSize="18" VerticalAlignment="Bottom" Style="{DynamicResource CategoryExpanderErrorBubbelUp}"/>
                                                    <TextBlock Text="{Binding Name, Converter={StaticResource categoryConverter}}" FontWeight="Bold" FontSize="18" VerticalAlignment="Bottom" Style="{DynamicResource CategoryExpanderErrorBubbelUp}"/>
                                                    <TextBlock Text="] " FontWeight="Bold" FontSize="18" VerticalAlignment="Bottom" Style="{DynamicResource CategoryExpanderErrorBubbelUp}"/>
                                                    <TextBlock Text="{Binding Name}" FontWeight="Bold" FontSize="18" VerticalAlignment="Bottom" Style="{DynamicResource CategoryExpanderErrorBubbelUp}"/>
                                                    <TextBlock Text="{Binding ItemCount}" FontSize="18" Foreground="Green" FontWeight="Bold" FontStyle="Italic" Margin="10,0,0,0" VerticalAlignment="Bottom" />
                                                    <TextBlock Text=" check(s)" FontSize="18" Foreground="Silver" FontStyle="Italic" VerticalAlignment="Bottom" />
                                                </StackPanel>
                                            </Expander.Header>
                                            <ItemsPresenter/>
                                        </Expander>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>

                <!--Sort by Namespace-->
                <GroupStyle>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Expander Margin="20 0 0 0" IsExpanded="{Binding RelativeSource={RelativeSource FindAncestor, 
                                                AncestorType={x:Type UserControl}}, Path=DataContext.NamespaceExpanderToggle, UpdateSourceTrigger=Explicit}">
                                            <Expander.Header>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Text="{Binding Name}" FontWeight="Bold" FontSize="14" VerticalAlignment="Bottom" Style="{DynamicResource NamespaceExpanderErrorBubbelUp}"/>
                                                    <TextBlock Text="{Binding ItemCount}" FontSize="14" Foreground="Green" FontWeight="Bold" FontStyle="Italic" Margin="10,0,0,0" VerticalAlignment="Bottom" />
                                                    <TextBlock Text=" check(s)" FontSize="14" Foreground="Silver" FontStyle="Italic" VerticalAlignment="Bottom" />
                                                </StackPanel>
                                            </Expander.Header>
                                            <ItemsPresenter  Margin="-20 0 0 0 "/>
                                        </Expander>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>

                <!--Sort by CheckName-->
                <GroupStyle>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Expander Margin="40 0 0 0" IsExpanded="{Binding RelativeSource={RelativeSource FindAncestor, 
                                                AncestorType={x:Type UserControl}}, Path=DataContext.CheckNameExpanderToggle, UpdateSourceTrigger=Explicit}">
                                            <Expander.Header>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Text="[" FontWeight="Bold" FontSize="14" VerticalAlignment="Bottom" Style="{DynamicResource CheckExpanderErrorBubbelUp}"/>
                                                    <TextBlock Text="{Binding Items, Converter={StaticResource checkIdConverter}}" FontWeight="Bold" FontSize="14" VerticalAlignment="Bottom" Style="{DynamicResource CheckExpanderErrorBubbelUp}" />
                                                    <TextBlock Text="] " FontWeight="Bold" FontSize="14" VerticalAlignment="Bottom" Style="{DynamicResource CheckExpanderErrorBubbelUp}" />
                                                    <TextBlock Text="{Binding Name}" FontWeight="Bold" FontSize="14" VerticalAlignment="Bottom" Style="{DynamicResource CheckExpanderErrorBubbelUp}"/>
                                                    <TextBlock Text="{Binding ItemCount}" FontSize="14" Foreground="Green" FontWeight="Bold" FontStyle="Italic" Margin="10,0,0,0" VerticalAlignment="Bottom" />
                                                    <TextBlock Text=" check(s)" FontSize="14" Foreground="Silver" FontStyle="Italic" VerticalAlignment="Bottom" />
                                                </StackPanel>
                                            </Expander.Header>
                                            <ItemsPresenter  Margin="-40 0 0 0 "/>
                                        </Expander>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>
            </ListView.GroupStyle>
        </ListView>

        <!--Bottom Buttons-->
        <DockPanel Grid.Row="2">
            <StackPanel Orientation="Horizontal" DockPanel.Dock="Left" VerticalAlignment="Bottom" Margin="0 0 10 0">
                <Button x:Name="GenerateBtn" Style="{DynamicResource GenerateButtonStyle}" Content="Generate Code" Command="{Binding GenerateFilesCommand}" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="100"/>
                <Button Margin="10 0 0 0" x:Name="ExcelBtn" Style="{DynamicResource GenerateButtonStyle}" Content="Export..." Command="{Binding GenerateExcelCommand}" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="100"/>
                <TextBlock Style="{DynamicResource UpToDateStyle}" FontWeight="Bold" Foreground="Red" Text="The XML file is outdated!" VerticalAlignment="Center" Margin="10 0 0 0"/>
            </StackPanel>
            <StackPanel DockPanel.Dock="Right" VerticalAlignment="Bottom">
                <Button x:Name="SaveBtn" Content="Save" Command="{Binding SaveCommand}" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="100"/>
            </StackPanel>
        </DockPanel>
    </Grid>
</UserControl>
    