// <auto-generated>This is auto-generated code by Validator Management Tool. Do not modify.</auto-generated>
namespace Skyline.DataMiner.CICD.Validators.Protocol.Tests.Protocol.Pairs.Pair.Content.CheckContentTag
{
    using System;
    using System.Collections.Generic;

    using Skyline.DataMiner.CICD.Models.Protocol.Read;
    using Skyline.DataMiner.CICD.Validators.Common.Interfaces;
    using Skyline.DataMiner.CICD.Validators.Common.Model;
    using Skyline.DataMiner.CICD.Validators.Protocol.Common;
    using Skyline.DataMiner.CICD.Validators.Protocol.Interfaces;

    internal static class Error
    {
        public static IValidationResult MissingClearResponseRoutine(IValidate test, IReadable referenceNode, IReadable positionNode, string pairId)
        {
            return new ValidationResult
            {
                Test = test,
                CheckId = CheckId.CheckContentTag,
                ErrorId = ErrorIds.MissingClearResponseRoutine,
                FullId = "9.2.1",
                Category = Category.Pair,
                Severity = Severity.Major,
                Certainty = Certainty.Certain,
                Source = Source.Validator,
                FixImpact = FixImpact.Breaking,
                GroupDescription = "",
                Description = String.Format("Missing clear response routine for pair '{0}'.", pairId),
                HowToFix = "",
                ExampleCode = "",
                Details = "Typically when a pair contains multiple responses, a clear response routine needs to be implemented in order to make sure parameters gets updated correctly." + Environment.NewLine + "There are 2 possible ways to implement the clear routine." + Environment.NewLine + "However, the first one is recommended as it is more efficient." + Environment.NewLine + "    - Recommended way: After response X, clear all other responses present in the same pair." + Environment.NewLine + "    - Alternative way: After response X, clear response X.",
                HasCodeFix = false,

                PositionNode = positionNode,
                ReferenceNode = referenceNode,
            };
        }

        public static IValidationResult MissingClearResponseRoutine_Sub(IValidate test, IReadable referenceNode, IReadable positionNode, string responseIdToClear, string responseIdOnWhichToTrigger)
        {
            return new ValidationResult
            {
                Test = test,
                CheckId = CheckId.CheckContentTag,
                ErrorId = ErrorIds.MissingClearResponseRoutine_Sub,
                FullId = "9.2.2",
                Category = Category.Pair,
                Severity = Severity.Major,
                Certainty = Certainty.Certain,
                Source = Source.Validator,
                FixImpact = FixImpact.Breaking,
                GroupDescription = "",
                Description = String.Format("Missing clear response '{0}' routine after response '{1}'.", responseIdToClear, responseIdOnWhichToTrigger),
                HowToFix = "",
                ExampleCode = "",
                Details = "Typically when a pair contains multiple responses, a clear response routine needs to be implemented in order to make sure parameters gets updated correctly." + Environment.NewLine + "There are 2 possible ways to implement the clear routine." + Environment.NewLine + "However, the first one is recommended as it is more efficient." + Environment.NewLine + "    - Recommended way: After response X, clear all other responses present in the same pair." + Environment.NewLine + "    - Alternative way: After response X, clear response X.",
                HasCodeFix = false,

                PositionNode = positionNode,
                ReferenceNode = referenceNode,
            };
        }
    }

    internal static class ErrorIds
    {
        public const uint MissingClearResponseRoutine = 1;
        public const uint MissingClearResponseRoutine_Sub = 2;
    }

    /// <summary>
    /// Contains the identifiers of the checks.
    /// </summary>
    public static class CheckId
    {
        /// <summary>
        /// The check identifier.
        /// </summary>
        public const uint CheckContentTag = 2;
    }
}