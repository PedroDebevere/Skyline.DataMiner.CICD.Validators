<Protocol xmlns="http://www.skyline.be/validatorProtocolUnitTest">
	<Name>CSharpNotifyDataMinerNTServiceSetVdx_DeltIncompatible</Name>
	<Version>1.0.0.1</Version>

	<QActions>
		<QAction id="1" name="PreCompile" encoding="csharp" options="precompile">
			<![CDATA[using Skyline.DataMiner.Scripting;

namespace Skyline.Protocol
{
	namespace MyNamespace
	{
		public static class MyClass
		{
			public const int NT_SERVICE_SET_VDX_GlobalConst = 232;
		}
	}
}]]>
		</QAction>

		<QAction id="100" name="Defining_NotifyType" encoding="csharp" dllImport="[ProtocolName].[ProtocolVersion].QAction.1.dll">
			<![CDATA[using System;

using Skyline.DataMiner.Net.Messages;
using Skyline.DataMiner.Scripting;
using Skyline.Protocol.MyNamespace;

public class QAction
{
	public static void Run(SLProtocol protocol)
	{
		const int NT_SERVICE_SET_VDX_Const = 232;
		int NT_SERVICE_SET_VDX_Int = 232;
		int NT_SERVICE_SET_VDX_Math = 230;

		string serviceId = "661";

		string serviceVdx = "myVisioFile.vsdx|1";

		// Different ways to define NT
		protocol.NotifyDataMiner(232, serviceId, serviceVdx);
		protocol.NotifyDataMiner(230 + 10 - 8, serviceId, serviceVdx);

		protocol.NotifyDataMiner(NT_SERVICE_SET_VDX_Const, serviceId, serviceVdx);
		protocol.NotifyDataMiner(NT_SERVICE_SET_VDX_Int, serviceId, serviceVdx);
		protocol.NotifyDataMiner(NT_SERVICE_SET_VDX_Math + 2, serviceId, serviceVdx); 
		protocol.NotifyDataMiner(MyClass.NT_SERVICE_SET_VDX_GlobalConst, serviceId, serviceVdx);

		protocol.NotifyDataMiner((int)NT_SERVICE_SET_VDX_Const, serviceId, serviceVdx);
		protocol.NotifyDataMiner((int)NT_SERVICE_SET_VDX_Int, serviceId, serviceVdx);
		protocol.NotifyDataMiner((int)NT_SERVICE_SET_VDX_Math + 2, serviceId, serviceVdx);
		protocol.NotifyDataMiner((int)MyClass.NT_SERVICE_SET_VDX_GlobalConst, serviceId, serviceVdx);
		protocol.NotifyDataMiner((int)NotifyType.NT_SERVICE_SET_VDX, serviceId, serviceVdx);
		
		protocol.NotifyDataMinerQueued(232, serviceId, serviceVdx);
	}
}]]>
		</QAction>
		<QAction id="101" name="Defining_Element" encoding="csharp">
			<![CDATA[using System;
using System.Text;

using Skyline.DataMiner.Scripting;

public class QAction
{
	public static void Run(SLProtocol protocol)
	{
		uint serviceId = 661;
		int serviceId_int = 661;
		string serviceId_string = "661";

		string serviceId_toString = Convert.ToString(serviceId);
		string serviceDetails_stringFormat = string.Format("{0}", serviceId);

		string serviceDetails_multiline;
		serviceDetails_multiline = Convert.ToString(serviceId);

		StringBuilder serviceDetails_stringBuilder = new StringBuilder();
		serviceDetails_stringBuilder.Append(serviceId);

		string serviceVdx = "myVisioFile.vsdx|1";

		// Different ways to define the service
		protocol.NotifyDataMiner(232, 661, serviceVdx);
		protocol.NotifyDataMiner(232, "661", serviceVdx);
		//protocol.NotifyDataMiner(232, "661/", serviceVdx);	// Wrong serviceId (not covered by this check)
		protocol.NotifyDataMiner(232, "/661", serviceVdx);      // Wrong dmaId

		protocol.NotifyDataMiner(232, serviceId, serviceVdx);
		protocol.NotifyDataMiner(232, serviceId_int, serviceVdx);
		protocol.NotifyDataMiner(232, serviceId_string, serviceVdx);

		protocol.NotifyDataMiner(232, serviceId.ToString(), serviceVdx);
		protocol.NotifyDataMiner(232, Convert.ToString(serviceId), serviceVdx);
		protocol.NotifyDataMiner(232, string.Format("{0}", serviceId), serviceVdx);

		protocol.NotifyDataMiner(232, serviceId_toString, serviceVdx);
		protocol.NotifyDataMiner(232, serviceDetails_stringFormat, serviceVdx);

		//protocol.NotifyDataMiner(232, serviceDetails_multiline, serviceVdx);
		//protocol.NotifyDataMiner(232, serviceDetails_stringBuilder.ToString(), serviceVdx);
	}
}]]>
		</QAction>
	</QActions>

</Protocol>