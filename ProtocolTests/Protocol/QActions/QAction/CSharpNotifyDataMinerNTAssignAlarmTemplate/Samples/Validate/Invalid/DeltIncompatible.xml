<Protocol xmlns="http://www.skyline.be/validatorProtocolUnitTest">
	<Name>CSharpNotifyDataMinerNTAssignAlarmTemplate_DeltIncompatible</Name>
	<Version>1.0.0.1</Version>

	<QActions>
		<QAction id="1" name="PreCompile" encoding="csharp" options="precompile">
			<![CDATA[using Skyline.DataMiner.Scripting;

namespace Skyline.Protocol
{
	namespace MyNamespace
	{
		public static class MyClass
		{
			public const int NT_ASSIGN_ALARM_TEMPLATE_GlobalConst = 117;
		}
	}
}]]>
		</QAction>

		<QAction id="100" name="Defining_NotifyType" encoding="csharp" triggers="100" dllImport="[ProtocolName].[ProtocolVersion].QAction.1.dll">
			<![CDATA[using System;
using System.Collections.Generic;

using Skyline.DataMiner.Net.Messages;
using Skyline.DataMiner.Scripting;
using Skyline.Protocol.MyNamespace;

public static class QAction
{
	public static void Run(SLProtocol protocol)
	{
		const int NT_ASSIGN_ALARM_TEMPLATE_Const = 117;
		int NT_ASSIGN_ALARM_TEMPLATE_Int = 117;
		int NT_ASSIGN_ALARM_TEMPLATE_Math = 100;

		uint elementId = 661;
		uint[] elementDetails = { elementId };
		string[] alarmTemplate = new string[] { "MyAlarmTemplateName" };

		// Different ways to define NT
		protocol.NotifyDataMiner(117, elementDetails, alarmTemplate);
		protocol.NotifyDataMiner(110 + 10 - 3, elementDetails, alarmTemplate);

		protocol.NotifyDataMiner(NT_ASSIGN_ALARM_TEMPLATE_Const, elementDetails, alarmTemplate);
		protocol.NotifyDataMiner(NT_ASSIGN_ALARM_TEMPLATE_Int, elementDetails, alarmTemplate);
		//protocol.NotifyDataMiner(NT_ASSIGN_ALARM_TEMPLATE_Math + 17, elementDetails, alarmTemplate);
		protocol.NotifyDataMiner(MyClass.NT_ASSIGN_ALARM_TEMPLATE_GlobalConst, elementDetails, alarmTemplate);

		protocol.NotifyDataMiner((int)NT_ASSIGN_ALARM_TEMPLATE_Const, elementDetails, alarmTemplate);
		protocol.NotifyDataMiner((int)NT_ASSIGN_ALARM_TEMPLATE_Int, elementDetails, alarmTemplate);
		//protocol.NotifyDataMiner((int)NT_ASSIGN_ALARM_TEMPLATE_Math + 17, elementDetails, alarmTemplate);
		protocol.NotifyDataMiner((int)MyClass.NT_ASSIGN_ALARM_TEMPLATE_GlobalConst, elementDetails, alarmTemplate);
		protocol.NotifyDataMiner((int)NotifyType.AssignAlarmTemplate, elementDetails, alarmTemplate);
		
		protocol.NotifyDataMinerQueued(117, elementDetails, alarmTemplate);
	}
}]]>
		</QAction>
		<QAction id="101" name="Defining_Element" encoding="csharp" triggers="100">
			<![CDATA[using System.Collections.Generic;

using Skyline.DataMiner.Scripting;

public static class QAction
{
	public static void Run(SLProtocol protocol)
	{
		uint elementId = 661;
		int elementId_int = 661;
		string elementId_string = "661";

		uint[] elementDetails = { elementId };
		uint[] elementDetails_hardcoded = { 10 };
		uint[] elementDetails_uint = new uint[] { 10 };

		uint[] elementDetails_multiline;
		elementDetails_multiline = new uint[] { 10 };

		List<uint> uintList = new List<uint>();
		uintList.Add(10);
		uint[] elementDetails_ListToArray = uintList.ToArray();

		string[] alarmTemplate = new string[] { "MyAlarmTemplateName" };

		// Different ways to define element
		protocol.NotifyDataMiner(117, 10 , alarmTemplate);
		protocol.NotifyDataMiner(117, elementId, alarmTemplate);
		protocol.NotifyDataMiner(117, elementId_int, alarmTemplate);
		protocol.NotifyDataMiner(117, elementId_string, alarmTemplate);

		protocol.NotifyDataMiner(117, new [] { 10 }, alarmTemplate);
		protocol.NotifyDataMiner(117, new uint[] { 10 }, alarmTemplate);
		protocol.NotifyDataMiner(117, new [] { elementId }, alarmTemplate);
		protocol.NotifyDataMiner(117, new uint[] { elementId }, alarmTemplate);
		
		protocol.NotifyDataMiner(117, elementDetails, alarmTemplate);
		protocol.NotifyDataMiner(117, elementDetails_hardcoded, alarmTemplate);
		protocol.NotifyDataMiner(117, elementDetails_uint, alarmTemplate);
		//protocol.NotifyDataMiner(117, elementDetails_multiline, alarmTemplate);		// Not yet covered
		//protocol.NotifyDataMiner(117, elementDetails_ListToArray, alarmTemplate);		// Not yet covered

		AssignAlarmTemplate(protocol, elementId, alarmTemplate);
	}

	private static void AssignAlarmTemplate(SLProtocol protocol, uint elementId, string[] alarmTemplate)
	{
		//protocol.NotifyDataMiner(117/*NT_ASSIGN_ALARM_TEMPLATE*/, elementId, alarmTemplate);
	}
}]]>
		</QAction>
	</QActions>

</Protocol>