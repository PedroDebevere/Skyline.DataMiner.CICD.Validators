<Protocol xmlns="http://www.skyline.be/validatorProtocolUnitTest">
	<Name>CSharpNotifyDataMinerNTGetElementName_Valid</Name>
	<Version>1.0.0.1</Version>

	<QActions>
		<QAction id="1" name="PreCompile" encoding="csharp" options="precompile">
			<![CDATA[using Skyline.DataMiner.Scripting;

namespace Skyline.Protocol
{
	namespace MyNamespace
	{
		public static class MyClass
		{
			public const int NT_GET_ELEMENT_NAME_GlobalConst = 144;
		}
	}
}]]>
		</QAction>

		<QAction id="100" name="Defining_NotifyType" encoding="csharp" dllImport="[ProtocolName].[ProtocolVersion].QAction.1.dll">
			<![CDATA[using Skyline.DataMiner.Net.Messages;
using Skyline.DataMiner.Scripting;
using Skyline.Protocol.MyNamespace;

public class QAction
{
	public static void Run(SLProtocol protocol)
	{
		const int NT_GET_ELEMENT_NAME_Const = 144;
		int NT_GET_ELEMENT_NAME_Int = 144;
		int NT_GET_ELEMENT_NAME_Math = 140;

		uint dmaId = 200;
		uint elementId = 661;
		uint[] elementDetails = { dmaId, elementId };

		// Different ways to define NT
		protocol.NotifyDataMiner(144, elementDetails, null);
		protocol.NotifyDataMiner(140 + 10 - 6, elementDetails, null);

		protocol.NotifyDataMiner(NT_GET_ELEMENT_NAME_Const, elementDetails, null);
		protocol.NotifyDataMiner(NT_GET_ELEMENT_NAME_Int, elementDetails, null);
		protocol.NotifyDataMiner(NT_GET_ELEMENT_NAME_Math + 4, elementDetails, null);
		protocol.NotifyDataMiner(MyClass.NT_GET_ELEMENT_NAME_GlobalConst, elementDetails, null);

		protocol.NotifyDataMiner((int)NT_GET_ELEMENT_NAME_Const, elementDetails, null);
		protocol.NotifyDataMiner((int)NT_GET_ELEMENT_NAME_Int, elementDetails, null);
		protocol.NotifyDataMiner((int)NT_GET_ELEMENT_NAME_Math + 4, elementDetails, null);
		protocol.NotifyDataMiner((int)MyClass.NT_GET_ELEMENT_NAME_GlobalConst, elementDetails, null);
		protocol.NotifyDataMiner((int)NotifyType.AssignAlarmTemplate, elementDetails, null);
		
		protocol.NotifyDataMinerQueued(144, elementDetails, null);
	}
}]]>
		</QAction>
		<QAction id="101" name="Defining_Element" encoding="csharp">
			<![CDATA[using Skyline.DataMiner.Scripting;

public class QAction
{
	public static void Run(SLProtocol protocol)
	{
		uint dmaId = 200;
		uint elementId = 661;

		uint[] elementDetails = { dmaId, elementId };
		uint[] elementDetails_hardcoded = { 10, 2 };

		uint[] elementDetails_multiline;
		elementDetails_multiline = new uint[] { 10, 2 };

		// Different ways to define element
		protocol.NotifyDataMiner(144, new uint[] { 10, 2 }, null);
		protocol.NotifyDataMiner(144, new [] { 10, 2 }, null);
		protocol.NotifyDataMiner(144, new uint[] { dmaId, elementId }, null);
		protocol.NotifyDataMiner(144, new [] { dmaId, elementId }, null);
		protocol.NotifyDataMiner(144, elementDetails, null);
		protocol.NotifyDataMiner(144, elementDetails_hardcoded, null);
		protocol.NotifyDataMiner(144, elementDetails_multiline, null);
	}
}]]>
		</QAction>
		<QAction id="102" name="Processing_Result" encoding="csharp">
			<![CDATA[using Skyline.DataMiner.Scripting;

public class QAction
{
	public static void Run(SLProtocol protocol)
	{
		uint dmaId = 200;
		uint elementId = 661;
		uint[] elementDetails = { dmaId, elementId };

		string elementName = (string)protocol.NotifyDataMiner(144, elementDetails, null);
		protocol.Log("QA" + protocol.QActionID + "|Run|elementName '" + elementName + "'", LogType.DebugInfo, LogLevel.NoLogging);
	}
}]]>
		</QAction>

	</QActions>

</Protocol>