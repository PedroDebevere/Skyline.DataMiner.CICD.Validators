namespace Common.Testing
{
    using System;
    using System.Text;

    using Common.Testing.QActionHelper;

    using Skyline.DataMiner.CICD.Validators.Common.Interfaces;

    public class ProtocolQActionHelperProvider : IProtocolQActionHelperProvider
    {
        private const string AutoGeneratedCodeByDis = "// <auto-generated>This is auto-generated code by DIS. Do not modify.</auto-generated>";

        public string GetProtocolQActionHelper(string protocolCode, bool ignoreErrors = false)
        {
            var result = InternalQActionHelper.CreateProtocolQActionHelperFromString(protocolCode, out string sourceCode);

            if (!ignoreErrors && result != null && result.Count > 0)
            {
                StringBuilder error = new StringBuilder();
                error.Append("Couldn't generate QAction helper:");

                foreach (var err in result)
                {
                    error.Append("\n    Line " + err.Line + ": " + err.Description);
                }

                throw new InvalidOperationException(error.ToString());
            }

            var csContent = new StringBuilder();
            csContent.AppendLine(AutoGeneratedCodeByDis);

            if (!String.IsNullOrWhiteSpace(sourceCode))
            {
                csContent.Append(sourceCode);
            }
            else
            {
                csContent.Append("namespace Skyline.DataMiner.Scripting { public class SLProtocolExt : SLProtocol { } }");
            }

            return csContent.ToString();
        }
    }
}
